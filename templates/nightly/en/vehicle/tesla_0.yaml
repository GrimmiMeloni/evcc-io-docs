product:
  brand: Tesla
requirements: ["sponsorship"]
description: |
  Tesla `access` and `refresh` tokens are required. These can be generated through [tesla.evcc.io](https://tesla.evcc.io).
  Controlling vehicles in conjunction with a Tesla Wall Connector is done via an evcc proxy server and requires a sponsor token. The evcc virtual key must be installed on the vehicle.
  See [tesla.evcc.io](https://tesla.evcc.io).

render:
  - default: |
      type: template
      template: tesla
      title: # Will be displayed in the user interface (optional)
      capacity: 50 # Battery capacity in kWh (optional)
      accessToken:
      refreshToken:
      vin: W... # Required if you own multiple vehicles of the same brand (optional)
    advanced: |
      type: template
      template: tesla
      title: # Will be displayed in the user interface (optional)
      capacity: 50 # Battery capacity in kWh (optional)
      accessToken:
      refreshToken:
      vin: W... # Required if you own multiple vehicles of the same brand (optional)
      icon: car # Icon as shown in user interface (optional)
      phases: 3 # The maximum number of phases which can be used (optional)
      mode: # Possible values are Off, Now, MinPV and PV, or empty if none should be set (optional)
      minCurrent: 6 # The minimum amperage per connected phase with which the car should be charged (optional)
      maxCurrent: 16 # The maximum amperage per connected phase with which the car shuold be charged (optional)
      identifiers: # Mostly this can be added later, see: https://docs.evcc.io/en/docs/features/vehicle (optional)
      priority: # Priority of the loadpoint or vehicle in relation to other loadpoints or vehicles for allocating pv energy (optional)
      commandProxy: https://tesla.evcc.io/ # When using a TWC3 (or other 'dumb' charger not capable of control), evcc can manage the charge directly by communicating with the vehicle through a Command Proxy. By default, the proxy provided by evcc is used. With this parameter, you set the base URL of a custom Command Proxy to use instead of the default evcc one. See for example https://github.com/wimaha/TeslaBleHttpProxy for a proxy sending commands via bluetooth. (optional)
      cache: 15m # Time interval with when data should be reloaded from the vehicle (optional)
